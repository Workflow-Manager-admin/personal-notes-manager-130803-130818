{"is_source_file": true, "format": "TypeScript (Angular)", "description": "This file defines the Angular component 'NotesComponent' responsible for managing notes in the frontend. It handles note selection, creation, editing, saving, and deletion, interacting with the NotesService for data operations and maintaining component state.", "external_files": ["./notes.service", "./notes.component.html", "./notes.component.css"], "external_methods": ["this._notesService.notes$.subscribe", "this._notesService.isAvailable", "this._notesService.fetchNotes", "this._notesService.updateNote", "this._notesService.addNote", "this._notesService.deleteNote"], "published": [], "classes": [{"name": "NotesComponent", "description": "Angular component for managing notes, including CRUD operations and UI state handling."}], "methods": [{"name": "ngOnInit", "description": "Initialization logic; subscribes to notes updates and fetches notes from service if available."}, {"name": "ngOnDestroy", "description": "Cleanup; unsubscribes from notes updates."}, {"name": "selectNote", "description": "Selects the given note for viewing or editing."}, {"name": "newNote", "description": "Prepares component for creating a new note."}, {"name": "editNote", "description": "Enables editing of the selected note."}, {"name": "saveNote", "description": "Validates and saves a new or updated note via the service."}, {"name": "deleteNote", "description": "Deletes the specified note after confirmation."}, {"name": "cancelEdit", "description": "Cancels editing mode and resets selection."}], "calls": ["this._notesService.notes$.subscribe", "this._notesService.isAvailable", "this._notesService.fetchNotes", "this._notesService.updateNote", "this._notesService.addNote", "this._notesService.deleteNote", "globalThis.confirm"], "search-terms": ["NotesComponent", "NotesService interaction", "Angular note management", "Component lifecycle Angular", "TypeScript note CRUD"], "state": 2, "file_id": 22, "knowledge_revision": 86, "git_revision": "bdf5b9d4246643cd9ee80f29df770dcd39ed19ab", "revision_history": [{"45": ""}, {"59": ""}, {"60": ""}, {"68": ""}, {"73": ""}, {"74": ""}, {"76": "21a36c5161c6ee5bdbe4496be3f1de49f4ce6184"}, {"78": "21a36c5161c6ee5bdbe4496be3f1de49f4ce6184"}, {"79": "21a36c5161c6ee5bdbe4496be3f1de49f4ce6184"}, {"82": "21a36c5161c6ee5bdbe4496be3f1de49f4ce6184"}, {"83": "21a36c5161c6ee5bdbe4496be3f1de49f4ce6184"}, {"84": "21a36c5161c6ee5bdbe4496be3f1de49f4ce6184"}, {"85": "21a36c5161c6ee5bdbe4496be3f1de49f4ce6184"}, {"86": "bdf5b9d4246643cd9ee80f29df770dcd39ed19ab"}], "ctags": [{"_type": "tag", "name": "NotesComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^export class NotesComponent implements OnInit, OnDestroy {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^    const content = this.newNoteContent.trim();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "editMode", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^  editMode = false;$/", "language": "TypeScript", "kind": "property", "scope": "NotesComponent", "scopeKind": "class"}, {"_type": "tag", "name": "errorMsg", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^  errorMsg = '';$/", "language": "TypeScript", "kind": "property", "scope": "NotesComponent", "scopeKind": "class"}, {"_type": "tag", "name": "loading", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^  loading = false;$/", "language": "TypeScript", "kind": "property", "scope": "NotesComponent", "scopeKind": "class"}, {"_type": "tag", "name": "newNoteContent", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^  newNoteContent = '';$/", "language": "TypeScript", "kind": "property", "scope": "NotesComponent", "scopeKind": "class"}, {"_type": "tag", "name": "newNoteTitle", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^  newNoteTitle = '';$/", "language": "TypeScript", "kind": "property", "scope": "NotesComponent", "scopeKind": "class"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^  notes: Note[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NotesComponent", "scopeKind": "class"}, {"_type": "tag", "name": "selectedNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^  selectedNote: Note | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "NotesComponent", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130803-130818/notes_frontend/src/app/notes.component.ts", "pattern": "/^    const title = this.newNoteTitle.trim();$/", "language": "TypeScript", "kind": "constant"}], "hash": "bc120e4b8a99cc7ee48310bebe410a08", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/notes.component.ts", "fields": [{"name": "editMode = false;", "scope": "NotesComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "errorMsg = '';", "scope": "NotesComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "loading = false;", "scope": "NotesComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "newNoteContent = '';", "scope": "NotesComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "newNoteTitle = '';", "scope": "NotesComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "notes: Note[] = [];", "scope": "NotesComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "selectedNote: Note | null = null;", "scope": "NotesComponent", "scopeKind": "class", "description": "unavailable"}]}